library(openair)
library(dplyr)
library(lubridate)
library(openair)
library(dplyr)
library(lubridate)
library(openair)
library(dplyr)
library(lubridate)
setwd("D:/PROYECTOS-R/taller_R_CIMMA/examples")
5 +5
SDSDSDS
SDSSD
# ANÃLISIS Y PROCESAMIENTO DE LOS DATOS DEL SENSOR MQ7
# ----------------------------------------------------
library(openair)
library(dplyr)
library(lubridate)
# LECTURA DE LOS DATOS DEL MONITOREO ----------
setwd("D:/PROYECTOS-R/taller_R_CIMMA/examples")
data_mq7 <- read.csv("DATA_MQ_FINAL.csv", header = T,
sep = ";", stringsAsFactors = F, encoding = "UTF-8")
View(data_mq7)
data_mq7 <- read.csv("DATA_MQ_FINAL.csv", header = T,
sep = ";", stringsAsFactors = F)
View(data_mq7)
data_mq7 <- read.csv("DATA_MQ_FINAL.csv", header = T,
sep = ";", stringsAsFactors = F, encoding = "UTF-8")
View(data_mq7)
data_mq7 <- read.csv("DATA_MQ_FINAL.csv", header = T,
sep = ";", stringsAsFactors = F)
View(data_mq7)
View(data_mq7)
View(data_mq7)
View(data_mq7)
names(data_mq7) = c("TEMPERATURA_C", "HUMEDAD_RELATIVA_%",
"PPM_CO_SENSOR1", "PPM_CO_SENSOR2")
View(data_mq7)
View(data_mq7)
View(data_mq7)
View(data_mq7)
data_mq7$TEMPERATURA_C
data_mq7[,1]
data_mq7$TEMPERATURA_C
K <- (0.082 * (data_mq7$TEMPERATURA_C + 273.15)) / 0.82
data_mq7$ug_m3_CO_SENSOR1 <- (data_mq7$PPM_CO_SENSOR1 * 28.01 * 1000) / K
data_mq7$ug_m3_CO_SENSOR2 <- (data_mq7$PPM_CO_SENSOR2 * 28.01 * 1000) / K
View(data_mq7)
plot(data_mq7$ug_m3_CO_SENSOR1)
plot(data_mq7$TEMPERATURA_C, data_mq7$ug_m3_CO_SENSOR1 )
plot(data_mq7$TEMPERATURA_C,  data_mq7$`HUMEDAD_RELATIVA_%`)
plot(data_mq7$TEMPERATURA_C,  data_mq7$HUMEDAD_RELATIVA_%, type = "l")
plot(data_mq7$TEMPERATURA_C,  data_mq7$HUMEDAD_RELATIVA_%, type = "p")
plot(data_mq7$TEMPERATURA_C,  data_mq7$HUMEDAD_RELATIVA_%, type = "p")
plot(data_mq7$TEMPERATURA_C,  data_mq7$HUMEDAD_RELATIVA_%)
plot(data_mq7$TEMPERATURA_C,  data_mq7$`HUMEDAD_RELATIVA_%`, type = "l")
plot(data_mq7$TEMPERATURA_C,  data_mq7$`HUMEDAD_RELATIVA_%`, type = "p")
hist(data_mq7$TEMPERATURA_C)
hist(data_mq7$TEMPERATURA_C, data_mq7$`HUMEDAD_RELATIVA_%`)
hist(data_mq7$`HUMEDAD_RELATIVA_%`)
qqplot(data_mq7$`HUMEDAD_RELATIVA_%`)
qqplot(data_mq7$TEMPERATURA_C, data_mq7$`HUMEDAD_RELATIVA_%`)
boxplot(data_mq7)
boxplot(data_mq7$ug_m3_CO_SENSOR1)
boxplot(data_mq7$PPM_CO_SENSOR1)
View(data_mq7)
View(data_mq7)
date <- seq(ymd_hm('2019-11-14 20:00'), by = '150 secs', length.out = nrow(data_mq7))
date
data_mq7 <- cbind(date,data_mq7)
View(data_mq7)
str(data_mq7)
plot.new()
View(data_mq7)
View(data_mq7)
timePlot(data_mq7, pollutant = c("PPM_CO_SENSOR1", "PPM_CO_SENSOR2"),
name.pol = c("SENSOR 1", "SENSOR 2"), smooth = T,
xlab = "Tiempo", ylab = "ppm CO", cols = c("red","blue"),
main = "CONCENTRACION DE CO EN INTERIORES - 2019/11/14",
avg.time = "1 hour", ref.y = list(h = 35, lty = 5))
boxplot(data_mq7$PPM_CO_SENSOR1)
timePlot(data_mq7, pollutant = c("PPM_CO_SENSOR1", "PPM_CO_SENSOR2"),
name.pol = c("SENSOR 1", "SENSOR 2"), smooth = T,
xlab = "Tiempo", ylab = "ppm CO", cols = c("red","blue"),
main = "CONCENTRACION DE CO EN INTERIORES - 2019/11/14",
avg.time = "1 hour", ref.y = list(h = 35, lty = 5))
timePlot(data_mq7, pollutant = c("ug_m3_CO_SENSOR1", "ug_m3_CO_SENSOR2"),
name.pol = c("SENSOR 1", "SENSOR 2"), smooth = T,
xlab = " ", ylab = "ug/m3 CO", cols = c("red","blue"),
main = "CONCENTRACIÃN DE CO EN INTERIORES - 2019/11/14",
avg.time = "1 hour")
View(data_mq7)
timePlot(data_mq7, pollutant = c("PPM_CO_SENSOR1", "PPM_CO_SENSOR2"),
name.pol = c("SENSOR 1", "SENSOR 2"), smooth = T,
xlab = "Tiempo", ylab = "ppm CO", cols = c("red","blue"),
main = "CONCENTRACION DE CO EN INTERIORES - 2019/11/14",
avg.time = "0.5 hour", ref.y = list(h = 35, lty = 5))
timePlot(data_mq7, pollutant = c("PPM_CO_SENSOR1", "PPM_CO_SENSOR2"),
name.pol = c("SENSOR 1", "SENSOR 2"), smooth = T,
xlab = "Tiempo", ylab = "ppm CO", cols = c("red","blue"),
main = "CONCENTRACION DE CO EN INTERIORES - 2019/11/14",
avg.time = "30 min", ref.y = list(h = 35, lty = 5))
timePlot(data_mq7, pollutant = c("PPM_CO_SENSOR1", "PPM_CO_SENSOR2"),
name.pol = c("SENSOR 1", "SENSOR 2"), smooth = T,
xlab = "Tiempo", ylab = "ppm CO", cols = c("red","blue"),
main = "CONCENTRACION DE CO EN INTERIORES - 2019/11/14",
avg.time = "10 min", ref.y = list(h = 35, lty = 5))
pairs(data_mq7,
lower.panel = panel.smooth,
upper.panel = NULL,
col = "skyblue3")
iris
pairs(iris,
lower.panel = panel.smooth,
upper.panel = NULL,
col = "skyblue3")
scatterPlot(data_mq7, x = "TEMPERATURA_C", y = "PPM_CO_SENSOR2",
method = "density", col = "jet")
scatterPlot(data_mq7, x = "TEMPERATURA_C", y = "PPM_CO_SENSOR2",
method = "density", col = "jet")
timePlot(data_mq7, pollutant = c("ug_m3_CO_SENSOR2"),
name.pol = c("SENSOR 2"), smooth = T,
xlab = " ", ylab = "ug/m3 CO", cols = c("blue"),
main = "CONCENTRACIÃN DE CO EN INTERIORES - 2019/11/14",
avg.time = "1 hour", ref.y = list(h = 35000, lty = 5))
summary(data_mq7)
setwd("D:/PROYECTOS-R/taller_R_CIMMA/examples")
data_mq7 <- read.csv("DATA_MQ_FINAL.csv", header = T,
sep = ";", stringsAsFactors = F)
summary(data_mq7)
pkgs = c("tidyverse", "data.table", "openxlsx", "mice")
# install.packages(pkgs)
lapply(pkgs, library, character.only = TRUE)
pkgs = c("tidyverse", "data.table", "openxlsx", "mice")
# install.packages(pkgs)
lapply(pkgs, library, character.only = TRUE)
setwd("D:/PROYECTOS-R/taller_R_CIMMA/examples")
pkgs = c("tidyverse", "data.table", "openxlsx", "mice")
# install.packages(pkgs)
lapply(pkgs, library, character.only = TRUE)
setwd("D:/PROYECTOS-R/taller_R_CIMMA/examples")
df <- read.csv("MATUCANA-HISTORICO.csv",
header = F,
sep = ";",
stringsAsFactors = F,
na.strings = "-99.9")
View(df)
names(df) <- c("ANHO", "MES", "DIA", "PP", "TMAX", "TMIN")
View(df)
summary(df)
740/18902*100
View(df)
df$FECHA <- paste(df$ANHO, df$MES, df$DIA, sep = "-")
View(df)
str(df)
df$FECHA <- as.Date(df$FECHA, format = "%Y-%m-%d")
str(df)
summary(df)
md.pattern(df)
boxplot(df$TMAX)
boxplot(df$TMIN)
boxplot(df$PP)
boxplot.stats(df$TMAX)$out
boxplot.stats(df$TMIN)$out
boxplot.stats(df$PP)$out
boxplot.stats(df$TMAX)$out
boxplot.stats(df$TMIN)$out
out_tmin <- boxplot.stats(df$TMIN)$out
df[df$TMIN != out_tmin, ]
df[df$TMIN == out_tmin, ]
df[df$TMIN == out_tmin, ]
df[df$TMIN != out_tmin, ]
df2 <- df[df$TMIN != out_tmin, ]
boxplot(df$TMIN)
df2 <- df[df$TMIN == out_tmin, ]
df2 <- df[out_tmin, ]
df2 <- df[-out_tmin, ]
df2 <- df[out_tmin, ]
View(df2)
boxplot(df$TMIN)
df2 <- df[-out_tmin, ]
boxplot(df2$TMIN)
boxplot(df$TMIN)
boxplot(df2$TMIN)
boxplot(df$TMIN)
summary(df2)
df_mice <- mice(df2,m=5,maxit=50,meth='pmm',seed=500)
summary(df_mice)
df_complete <- complete(df_mice,1)
summary(df_complete)
df3 <- df_complete
df3$FECHA_m <- format(df$FECHA, format = "%Y-%m")
df3$FECHA_m <- format(df3$FECHA, format = "%Y-%m")
View(df3)
PP_PROM_m <- aggregate(PP ~ FECHA_m, df3, sum)
View(PP_PROM_m)
plot(PP_PROM_m)
plot(PP_PROM_m, na.omit = T)
plot(PP_PROM_m$PP)
View(df3)
TMAX_PROM <- aggregate(TMAX ~ FECHA_m, df3, mean)
View(TMAX_PROM)
summary(TMAX_PROM)
plot(TMAX_PROM)
plot(TMAX_PROM$FECHA_m, TMAX_PROM$TMAX)
plot(as.Date(TMAX_PROM$FECHA_m), TMAX_PROM$TMAX)
str(TMAX_PROM )
plot(TMAX_PROM )
plot(TMAX_PROM$TMAX)
df3$FECHA_a <- format(df3$FECHA, format = "%Y")
View(df3)
df3$FECHA_a <- format(df3$FECHA, format = "%Y")
TMIN_ANUAL <- aggregate(TMIN ~ FECHA_a, df3, mean)
View(TMIN_ANUAL)
plot(TMIN_ANUAL$TMIN)
View(df3)
View(df)
View(df3)
View(df3)
View(TMAX_PROM)
View(PP_PROM_m)
View(df3)
View(PP_PROM_m)
View(TMAX_PROM)
View(TMIN_ANUAL)
# Para limpiar el workspace:
rm(list = ls())
###############
#  Paquetes   #
###############
install.packages("ggplot2")
#EJERCICIO 1
file_url <-  'ftp://aftp.cmdl.noaa.gov/products/trends/co2/co2_mm_mlo.txt'
est_ml <-  read.table(file_url, header = F, stringsAsFactors = F)
head(est_ml)
#EJERCICIO 2
co2_data <- est_ml[, c(1:5)]
head(co2_data)
#EJERCICIO 3
colnames(co2_data) <- c("aÃ±o","mes", "aÃ±o_dec", "co2_ppm", "co2_ppm_int")
head(co2_data)
#EJERCICIO 4
co2_data[co2_data$co2_ppm == -99.99,]
co2_data[co2_data$co2_ppm == -99.99, 4] <- NA
head(co2_data)
#EJERCICIO 5
str(co2_data)
#EJERCICIO 6
co2_data$date <- as.Date(paste(co2_data$aÃ±o,
co2_data$mes,
'01' ,
sep = '-'), format = '%Y-%m-%d')
str(co2_data)
#EJERCICIO 7
summary(co2_data)
co2_data[co2_data$co2_ppm == min(co2_data$co2_ppm, na.rm = T),]
co2_data[co2_data$co2_ppm == max(co2_data$co2_ppm, na.rm = T),]
plot(
co2_data$date,
co2_data$co2_ppm_int,
type = 'l',
xlab = 'Fecha',
ylab = 'ConcentraciÃ³n de CO2 (ppm)',
main = 'ConcentraciÃ³n mensual de CO2 - Mauna Loa'
)
reglineal <- lm(co2_data$co2_ppm_int ~ co2_data$date)
summary(reglineal)
#EJERCICIO 6
co2_data$date <- as.Date(paste(co2_data$año,
co2_data$mes,
'01' ,
sep = '-'), format = '%Y-%m-%d')
str(co2_data)
#EJERCICIO 7
summary(co2_data)
co2_data[co2_data$co2_ppm == min(co2_data$co2_ppm, na.rm = T),]
co2_data[co2_data$co2_ppm == max(co2_data$co2_ppm, na.rm = T),]
plot(
co2_data$date,
co2_data$co2_ppm_int,
type = 'l',
xlab = 'Fecha',
ylab = 'ConcentraciÃ³n de CO2 (ppm)',
main = 'ConcentraciÃ³n mensual de CO2 - Mauna Loa'
)
reglineal <- lm(co2_data$co2_ppm_int ~ co2_data$date)
summary(reglineal)
View(co2_data)
#EJERCICIO 6
co2_data$date <- as.Date(paste(co2_data$`aÃ±o`,
co2_data$mes,
'01' ,
sep = '-'), format = '%Y-%m-%d')
View(co2_data)
View(co2_data)
ggplot(data = co2_data, aes(date, co2_ppm_int)) +
geom_line() +
xlab('Fecha') +
ylab('ConcentraciÃ³n de CO2 (ppm)') +
ggtitle('ConcentraciÃ³n mensual de CO2 - Mauna Loa') +
stat_smooth(method = lm, color = 'blue')
library(ggplot2)
ggplot(data = co2_data, aes(date, co2_ppm_int)) +
geom_line() +
xlab('Fecha') +
ylab('ConcentraciÃ³n de CO2 (ppm)') +
ggtitle('ConcentraciÃ³n mensual de CO2 - Mauna Loa') +
stat_smooth(method = lm, color = 'blue')
View(co2_data)
View(co2_data)
View(est_ml)
View(co2_data)
